resources:
  cloud: aws
  # region: us-east-1
  accelerators: {L4, A10g, A10, L40, A40, A100, A100-80GB}
  cpus: 4
  disk_tier: best

envs:
  # The ID of the Dagster run that trggered the job.
  # Overwritten by the Dagster process.
  DAGSTER_RUN_ID: "no-run"
  HF_TOKEN: "" # We'll pass this via the Dagster Cloud UI or a .env file instead
  SKYPILOT_BUCKET: s3://dagster-skypilot-bucket # Change to your own bucket name
  MAX_STEPS: 10
  TERM: "dumb"
  NO_COLOR: 1

workdir: dagster_skypilot/scripts

file_mounts:
  /artifacts:
    source: ${SKYPILOT_BUCKET}
    mode: MOUNT

# The '|' separator indicates a multiline string.
setup: |
  conda activate gemma
  if [ $? -ne 0 ]; then
    conda create -q -y -n gemma python=3.10
    conda activate gemma
  fi
  echo "Installing Python dependencies."
  pip install -q -U bitsandbytes==0.42.0
  pip install -q -U peft==0.8.2
  pip install -q -U trl==0.7.10
  pip install -q -U accelerate==0.27.1
  pip install -q -U datasets==2.17.0
  pip install -q -U transformers==4.38.1
  pip install -q "torch<2.2" torchvision --index-url https://download.pytorch.org/whl/cu121


run: |
  conda activate gemma

  NUM_NODES=`echo "$SKYPILOT_NODE_IPS" | wc -l`
  HOST_ADDR=`echo "$SKYPILOT_NODE_IPS" | head -n1`

  # Turn off wandb
  WANDB_MODE="offline"

  TERM=dumb NO_COLOR=1 torchrun \
    --nnodes=$NUM_NODES \
    --nproc_per_node=$SKYPILOT_NUM_GPUS_PER_NODE \
    --master_port=12375 \
    --master_addr=$HOST_ADDR \
    --node_rank=${SKYPILOT_NODE_RANK} \
    lora.py \
    --model_name_or_path google/gemma-7b \
    --save_steps 4 \
    --max_steps ${MAX_STEPS} \
    --output_dir /artifacts/${DAGSTER_RUN_ID}